graph TD;
    A[Web Server App Purposes] -->|Download Browser App| B[Download Browser App];
    A -->|Handle URL Routing| C[Handle URL Routing];
    A -->|Process URL and Backend Requests| D[Process URL and Backend Requests];
    A -->|Handle User Actions and API Requests| E[Handle User Actions and API Requests];
    E -->|Make API Requests| F[Make API Requests];
    F -->|Make Backend Requests| G[Make Backend Requests];
    G -->|Return Data to Browser| H[Return Data to Browser];
    E -->|Why not direct to backend?| I[Why not direct to backend?];
    I -->|REST API may not return exact data| J[REST API Limitations];
    I -->|Inefficient data transmission| K[Inefficient Transmission];
    K -->|Node.js app makes large requests| L[Node.js makes large requests];
    L -->|Efficient data transmission| M[Efficient Transmission];
    I -->|GraphQL allows exact data requests| N[GraphQL Advantages];
    N -->|More work for securing endpoints| O[Security Work];
    N -->|More work for optimizing performance| P[Performance Optimization];
    N -->|More code on client| Q[More Client Code];
    N -->|More work for defining schema| R[Schema Definition];
    N -->|Larger requests| S[Larger Requests];
