sequenceDiagram
    participant Engineer
    participant CloudNative
    participant Organization
    Engineer->>CloudNative: Adopt cloud native approach
    Note over CloudNative: Address non-functional requirements,including scalability, fault-tolerance, and maintainability
    CloudNative->>Organization: Empower to build scalable apps
    Note over Organization: In modern, dynamic environments
    CloudNative->>Organization: Utilize technologies like:
    Note over CloudNative: - Containers
    Note over CloudNative: - Service meshes
    Note over CloudNative: - Microservices
    Note over CloudNative: - Immutable infrastructure
    Note over CloudNative: - Declarative APIs
    Note over CloudNative: Enable loosely coupled systems
    Note over CloudNative: Combined with robust automation
    CloudNative->>Engineer: Allow high-impact changes
    Note over CloudNative: - Frequent and predictable
    Note over CloudNative: - Minimal toil
    Engineer->>Organization: Utilize cloud-native techniques
    Note over Organization: Achieve benefits (resilient, manageable, observable, allow frequent and predictable changes)
