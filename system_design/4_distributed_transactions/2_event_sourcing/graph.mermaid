graph TD;
    A[Start] --> B{Event Sourcing Pattern?}
    B -->|Yes| C[Store data or changes as events in append-only log]
    C --> D[Event log as source of truth]
    D --> E[All other databases as projections of event log]
    E --> F[Write to event log first]
    F --> G[Event handlers consume new event and write to other databases]
    G --> H[Not tied to any particular data source]
    H --> I[Capture events from various sources]
    I --> J[Publish and persist fine-grained state-changing events]
    J --> K[Store events in log]
    K --> L[Subscribers process log's events to determine entity's state]
    L --> M[Asynchronous communication via event log]
    M --> N[Implemented in various ways]
    N --> O{Publisher publish event to event store?}
    O -->|Yes| P[Kafka, SQL, MongoDB, Couchbase, Redis, Apache Ignite]
    O -->|No| Q[End]
    P --> R[Audit trail of all events]
    R --> S[Derive insights by replaying events]
    S --> T[Introduce new event types and handlers without affecting data]
    T --> U[Adds complexity to system design and development]
    U --> V[Manage event stores, replay, versioning, and schema evolution]
    V --> W[Increases storage requirements]
    W --> X[Event replay becomes costly and time-consuming as logs grow]
    X --> Q[End]
    B --> Q[End]
